1 program ReservedWords
1 Programa1 Identifier
1 ; Delimiters
3 register ReservedWords
3 Pessoa Identifier
4 { Delimiters
5 integer ReservedWords
5 idade Identifier
5 ; Delimiters
6 real ReservedWords
6 peso Identifier
6 ; Delimiters
7 string ReservedWords
7 nome Identifier
7 ; Delimiters
8 } Delimiters
10 const ReservedWords
11 { Delimiters
12 integer ReservedWords
12 MINIDADE Identifier
12 = RelationalOperatorsSimple
12 18 Numbers
12 ; Delimiters
13 integer ReservedWords
13 MAXIDADE Identifier
13 = RelationalOperatorsSimple
13 69 Numbers
13 ; Delimiters
14 real ReservedWords
14 MINPESO Identifier
14 = RelationalOperatorsSimple
14 50.0 NumbersFloat
14 ; Delimiters
15 } Delimiters
17 var ReservedWords
18 { Delimiters
19 integer ReservedWords
19 cont Identifier
19 = RelationalOperatorsSimple
19 0 Numbers
19 ; Delimiters
20 } Delimiters
22 function ReservedWords
22 PodeDoar Identifier
22 ( Delimiters
22 integer ReservedWords
22 idade Identifier
22 , Delimiters
22 real ReservedWords
22 peso Identifier
22 ) Delimiters
22 : Delimiters
22 boolean ReservedWords
23 { Delimiters
24 if ReservedWords
24 ( Delimiters
24 idade Identifier
24 >= RelationalOperators
24 MINIDADE Identifier
24 && LogicalOperators
24 idade Identifier
24 <= RelationalOperators
24 MAXIDADE Identifier
24 ) Delimiters
25 { Delimiters
26 if ReservedWords
26 ( Delimiters
26 peso Identifier
26 >= RelationalOperators
26 MINPESO Identifier
26 ) Delimiters
27 { Delimiters
28 return ReservedWords
28 true ReservedWords
28 ; Delimiters
29 } Delimiters
30 } Delimiters
31 else ReservedWords
32 { Delimiters
33 return ReservedWords
33 false ReservedWords
33 ; Delimiters
34 } Delimiters
35 } Delimiters
37 procedure ReservedWords
37 Finalizar Identifier
37 ( Delimiters
37 ) Delimiters
38 { Delimiters
39 write ReservedWords
39 ( Delimiters
39 "Muito obrigada por usar nosso programa! Tchau!" StringEndDoubleQuotes
39 ) Delimiters
39 ; Delimiters
40 } Delimiters
43 main ReservedWords
44 { Delimiters
45 var ReservedWords
46 { Delimiters
47 Pessoa Identifier
47 p Identifier
47 ; Delimiters
48 integer ReservedWords
48 qtd Identifier
48 = RelationalOperatorsSimple
48 0 Numbers
48 , Delimiters
48 id Identifier
48 ; Delimiters
49 boolean ReservedWords
49 resposta Identifier
49 ; Delimiters
50 } Delimiters
52 write ReservedWords
52 ( Delimiters
52 "Digite a quantidade de pessoas: " StringEndDoubleQuotes
52 ) Delimiters
52 ; Delimiters
53 read ReservedWords
53 ( Delimiters
53 qtd Identifier
53 ) Delimiters
53 ; Delimiters
55 while ReservedWords
55 ( Delimiters
55 cont Identifier
55 < RelationalOperatorsSimple
55 qtd Identifier
55 ) Delimiters
56 { Delimiters
57 write ReservedWords
57 ( Delimiters
57 "Digite o nome da pessoa:" StringEndDoubleQuotes
57 ) Delimiters
57 ; Delimiters
58 read ReservedWords
58 ( Delimiters
58 p Identifier
58 . Delimiters
58 nome Identifier
58 ) Delimiters
58 ; Delimiters
59 write ReservedWords
59 ( Delimiters
59 "Digite a idade da pessoa:" StringEndDoubleQuotes
59 ) Delimiters
59 ; Delimiters
60 read ReservedWords
60 ( Delimiters
60 p Identifier
60 . Delimiters
60 idade Identifier
60 ) Delimiters
60 ; Delimiters
61 write ReservedWords
61 ( Delimiters
61 "Digite o peso da pessoa:" StringEndDoubleQuotes
61 ) Delimiters
61 ; Delimiters
62 read ReservedWords
62 ( Delimiters
62 p Identifier
62 . Delimiters
62 peso Identifier
62 ) Delimiters
62 ; Delimiters
63 id Identifier
63 = RelationalOperatorsSimple
63 p Identifier
63 . Delimiters
63 idade Identifier
63 ; Delimiters
64 resposta Identifier
64 = RelationalOperatorsSimple
64 PodeDoar Identifier
64 ( Delimiters
64 id Identifier
64 , Delimiters
64 p Identifier
64 . Delimiters
64 peso Identifier
64 ) Delimiters
64 ; Delimiters
65 if ReservedWords
65 ( Delimiters
65 resposta Identifier
65 == RelationalOperators
65 true ReservedWords
65 ) Delimiters
66 { Delimiters
67 write ReservedWords
67 ( Delimiters
67 "Pode doar sangue!" StringEndDoubleQuotes
67 ) Delimiters
67 ; Delimiters
68 qtd Identifier
68 = RelationalOperatorsSimple
68 qtd Identifier
68 + ArithmeticOperatorsPlus
68 1 Numbers
68 ; Delimiters
69 } Delimiters
70 else ReservedWords
71 { Delimiters
72 write ReservedWords
72 ( Delimiters
72 "NÃ£o pode doar sangue!" StringEndDoubleQuotes
72 ) Delimiters
72 ; Delimiters
73 } Delimiters
74 cont Identifier
74 ++ ArithmeticOperatorsDoublePlus
74 ; Delimiters
75 } Delimiters
77 write ReservedWords
77 ( Delimiters
77 "A quantidade de pessoas que puderam doar sangue foi de " StringEndDoubleQuotes
77 , Delimiters
77 qtd Identifier
77 , Delimiters
77 " de um total de " StringEndDoubleQuotes
77 , Delimiters
77 cont Identifier
77 , Delimiters
77 " pessoas." StringEndDoubleQuotes
77 ) Delimiters
77 ; Delimiters
78 Finalizar Identifier
78 ( Delimiters
78 ) Delimiters
78 ; Delimiters
79 } Delimiters
82  ErrorInvalidCharacter