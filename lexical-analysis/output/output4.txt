1 program ReservedWords
1 Programa1 Identifier
1 ; Delimiter
3 register ReservedWords
3 Pessoa Identifier
4 { Delimiter
5 integer ReservedWords
5 idade Identifier
5 ; Delimiter
6 real ReservedWords
6 peso Identifier
6 ; Delimiter
7 string ReservedWords
7 nome Identifier
7 ; Delimiter
8 } Delimiter
10 const ReservedWords
11 { Delimiter
12 integer ReservedWords
12 MINIDADE Identifier
12 = RelationalOperatorSimple
12 18 Number
12 ; Delimiter
13 integer ReservedWords
13 MAXIDADE Identifier
13 = RelationalOperatorSimple
13 69 Number
13 ; Delimiter
14 real ReservedWords
14 MINPESO Identifier
14 = RelationalOperatorSimple
14 50.0 NumberFloat
14 ; Delimiter
15 } Delimiter
17 var ReservedWords
18 { Delimiter
19 integer ReservedWords
19 cont Identifier
19 = RelationalOperatorSimple
19 0 Number
19 ; Delimiter
20 } Delimiter
22 function ReservedWords
22 PodeDoar Identifier
22 ( Delimiter
22 integer ReservedWords
22 idade Identifier
22 , Delimiter
22 real ReservedWords
22 peso Identifier
22 ) Delimiter
22 : Delimiter
22 boolean ReservedWords
23 { Delimiter
24 if ReservedWords
24 ( Delimiter
24 idade Identifier
24 >= RelationalOperator
24 MINIDADE Identifier
24 && LogicalOperator
24 idade Identifier
24 <= RelationalOperator
24 MAXIDADE Identifier
24 ) Delimiter
25 { Delimiter
26 if ReservedWords
26 ( Delimiter
26 peso Identifier
26 >= RelationalOperator
26 MINPESO Identifier
26 ) Delimiter
27 { Delimiter
28 return ReservedWords
28 true ReservedWords
28 ; Delimiter
29 } Delimiter
30 } Delimiter
31 else ReservedWords
32 { Delimiter
33 return ReservedWords
33 false ReservedWords
33 ; Delimiter
34 } Delimiter
35 } Delimiter
37 procedure ReservedWords
37 Finalizar Identifier
37 ( Delimiter
37 ) Delimiter
38 { Delimiter
39 write ReservedWords
39 ( Delimiter
39 "Muito obrigada por usar nosso programa! Tchau!" StringEndDoubleQuotes
39 ) Delimiter
39 ; Delimiter
40 } Delimiter
43 main ReservedWords
44 { Delimiter
45 var ReservedWords
46 { Delimiter
47 Pessoa Identifier
47 p Identifier
47 ; Delimiter
48 integer ReservedWords
48 qtd Identifier
48 = RelationalOperatorSimple
48 0 Number
48 , Delimiter
48 id Identifier
48 ; Delimiter
49 boolean ReservedWords
49 resposta Identifier
49 ; Delimiter
50 } Delimiter
52 write ReservedWords
52 ( Delimiter
52 "Digite a quantidade de pessoas: " StringEndDoubleQuotes
52 ) Delimiter
52 ; Delimiter
53 read ReservedWords
53 ( Delimiter
53 qtd Identifier
53 ) Delimiter
53 ; Delimiter
55 while ReservedWords
55 ( Delimiter
55 cont Identifier
55 < RelationalOperatorSimple
55 qtd Identifier
55 ) Delimiter
56 { Delimiter
57 write ReservedWords
57 ( Delimiter
57 "Digite o nome da pessoa:" StringEndDoubleQuotes
57 ) Delimiter
57 ; Delimiter
58 read ReservedWords
58 ( Delimiter
58 p Identifier
58 . Delimiter
58 nome Identifier
58 ) Delimiter
58 ; Delimiter
59 write ReservedWords
59 ( Delimiter
59 "Digite a idade da pessoa:" StringEndDoubleQuotes
59 ) Delimiter
59 ; Delimiter
60 read ReservedWords
60 ( Delimiter
60 p Identifier
60 . Delimiter
60 idade Identifier
60 ) Delimiter
60 ; Delimiter
61 write ReservedWords
61 ( Delimiter
61 "Digite o peso da pessoa:" StringEndDoubleQuotes
61 ) Delimiter
61 ; Delimiter
62 read ReservedWords
62 ( Delimiter
62 p Identifier
62 . Delimiter
62 peso Identifier
62 ) Delimiter
62 ; Delimiter
63 id Identifier
63 = RelationalOperatorSimple
63 p Identifier
63 . Delimiter
63 idade Identifier
63 ; Delimiter
64 resposta Identifier
64 = RelationalOperatorSimple
64 PodeDoar Identifier
64 ( Delimiter
64 id Identifier
64 , Delimiter
64 p Identifier
64 . Delimiter
64 peso Identifier
64 ) Delimiter
64 ; Delimiter
65 if ReservedWords
65 ( Delimiter
65 resposta Identifier
65 == RelationalOperator
65 true ReservedWords
65 ) Delimiter
66 { Delimiter
67 write ReservedWords
67 ( Delimiter
67 "Pode doar sangue!" StringEndDoubleQuotes
67 ) Delimiter
67 ; Delimiter
68 qtd Identifier
68 = RelationalOperatorSimple
68 qtd Identifier
68 + ArithmeticOperatorPlus
68 1 Number
68 ; Delimiter
69 } Delimiter
70 else ReservedWords
71 { Delimiter
72 write ReservedWords
72 ( Delimiter
72 "NÃ£o pode doar sangue!" StringEndDoubleQuotes
72 ) Delimiter
72 ; Delimiter
73 } Delimiter
74 cont Identifier
74 ++ ArithmeticOperatorDoublePlus
74 ; Delimiter
75 } Delimiter
77 write ReservedWords
77 ( Delimiter
77 "A quantidade de pessoas que puderam doar sangue foi de " StringEndDoubleQuotes
77 , Delimiter
77 qtd Identifier
77 , Delimiter
77 " de um total de " StringEndDoubleQuotes
77 , Delimiter
77 cont Identifier
77 , Delimiter
77 " pessoas." StringEndDoubleQuotes
77 ) Delimiter
77 ; Delimiter
78 Finalizar Identifier
78 ( Delimiter
78 ) Delimiter
78 ; Delimiter
79 } Delimiter
82  ErrorInvalidCharacter