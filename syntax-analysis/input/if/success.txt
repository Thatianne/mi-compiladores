1 program ReservedWord
1 Test Identifier
1 ; Delimiter
3 var ReservedWord
3 { Delimiter
4 boolean ReservedWord
4 c Identifier
4 , Delimiter
4 d Identifier
4 ; Delimiter
5 integer ReservedWord
5 a Identifier
5 , Delimiter
5 b Identifier
5 ; Delimiter
6 string ReservedWord
6 e Identifier
6 ; Delimiter
7 } Delimiter
9 const ReservedWord
9 { Delimiter
10 boolean ReservedWord
10 c Identifier
10 = RelationalOperatorAssignment
10 10 Number
10 , Delimiter
10 d Identifier
10 = RelationalOperatorAssignment
10 "abc" StringEndDoubleQuotes
10 ; Delimiter
11 integer ReservedWord
11 a Identifier
11 = RelationalOperatorAssignment
11 e Identifier
11 , Delimiter
11 a Identifier
11 = RelationalOperatorAssignment
11 j Identifier
11 . Delimiter
11 k Identifier
11 , Delimiter
11 b Identifier
11 = RelationalOperatorAssignment
11 true ReservedWord
11 ; Delimiter
12 string ReservedWord
12 e Identifier
12 = RelationalOperatorAssignment
12 'b' CharacterEndSingleQuotes
12 ; Delimiter
13 } Delimiter
15 register ReservedWord
15 Pessoa Identifier
15 { Delimiter
16 string ReservedWord
16 nome Identifier
16 , Delimiter
16 sobrenome Identifier
16 ; Delimiter
17 integer ReservedWord
17 ano Identifier
17 ; Delimiter
18 } Delimiter
20 procedure ReservedWord
20 test Identifier
20 ( Delimiter
20 integer ReservedWord
20 a Identifier
20 , Delimiter
20 string ReservedWord
20 b Identifier
20 ) Delimiter
20 { Delimiter
21 var ReservedWord
21 { Delimiter
22 boolean ReservedWord
22 c Identifier
22 , Delimiter
22 d Identifier
22 ; Delimiter
23 integer ReservedWord
23 a Identifier
23 , Delimiter
23 b Identifier
23 ; Delimiter
24 string ReservedWord
24 e Identifier
24 ; Delimiter
25 } Delimiter
26 if ReservedWord
26 ( Delimiter
26 cont Identifier
26 && LogicalOperatorAnd
26 true ReservedWord
26 ) Delimiter
26 { Delimiter
27 write ReservedWord
27 ( Delimiter
27 "Digite o nome da pessoa:" StringEndDoubleQuotes
27 ) Delimiter
27 ; Delimiter
28 } Delimiter
28 else ReservedWord
28 { Delimiter
29 write ReservedWord
29 ( Delimiter
29 "A quantidade de pessoas que puderam doar sangue foi de " StringEndDoubleQuotes
29 , Delimiter
29 qtd Identifier
29 , Delimiter
29 " de um total de " StringEndDoubleQuotes
29 , Delimiter
29 cont Identifier
29 , Delimiter
29 " pessoas." StringEndDoubleQuotes
29 ) Delimiter
29 ; Delimiter
30 } Delimiter
32 while ReservedWord
32 ( Delimiter
32 a Identifier
32 > RelationalOperatorBigger
32 3 Number
32 ) Delimiter
32 { Delimiter
33 write ReservedWord
33 ( Delimiter
33 "A quantidade de pessoas que puderam doar sangue foi de " StringEndDoubleQuotes
33 , Delimiter
33 qtd Identifier
33 , Delimiter
33 " de um total de " StringEndDoubleQuotes
33 , Delimiter
33 cont Identifier
33 , Delimiter
33 " pessoas." StringEndDoubleQuotes
33 ) Delimiter
33 ; Delimiter
34 } Delimiter
35 } Delimiter
37 procedure ReservedWord
37 test Identifier
37 ( Delimiter
37 ) Delimiter
37 { Delimiter
38 var ReservedWord
38 { Delimiter
38 } Delimiter
39 write ReservedWord
39 ( Delimiter
39 "Digite o nome da pessoa:" StringEndDoubleQuotes
39 ) Delimiter
39 ; Delimiter
40 write ReservedWord
40 ( Delimiter
40 "A quantidade de pessoas que puderam doar sangue foi de " StringEndDoubleQuotes
40 , Delimiter
40 qtd Identifier
40 , Delimiter
40 " de um total de " StringEndDoubleQuotes
40 , Delimiter
40 cont Identifier
40 , Delimiter
40 " pessoas." StringEndDoubleQuotes
40 ) Delimiter
40 ; Delimiter
42 read ReservedWord
42 ( Delimiter
42 p Identifier
42 . Delimiter
42 idade Identifier
42 ) Delimiter
42 ; Delimiter
43 read ReservedWord
43 ( Delimiter
43 idade Identifier
43 ) Delimiter
43 ; Delimiter
44 } Delimiter
Success!